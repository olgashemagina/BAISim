Пошаговая инструкция для тестирования модуля импорта размеченных баз данных из внешних источников на примере коллекций изображений COCO и YOLA
1.	 Установите FiftyOne и скачайте коллекцию изображений COCO-2017. Это необходимо для просмотра изображений и их аннотации в исходном формате. Инструкции по установке FiftyOne и скачивания коллекции изображений находятся по адресу:
https://docs.voxel51.com/user_guide/app.html
2.	Скрипт для конвертации исходной аннотации в аннотацию разработанной библиотеки находится в каталоге https://github.com/olgashemagina/BAISim/tools/converters/COCO2AWP_Converter.py. Перед запуском необходимо отредактировать значение переменной path в скрипте в соответствии с реальным нахождением коллекции. Путь должен быть указан до каталога, в котором находится файл info.json.
3.	Выполните скрипт 
python COCO2AWP_Converter.py
4.	В результате выполнения в каталоге validation/data (путь указан относительно местоположения файла info.json) для каждого файла в формате jpeg появится файл разметки в формате xml, а также файл dictionary.xml, содержащий информацию о классах.
5.	Собрать и запустить приложение Image Marker. Инструкция по сборке находится в по адресу https://github.com/olgashemagina/BAISim/tree/main/library/photon41/README.md
6.	В приложении Image Marker перейти в каталог validation/data (путь указан относительно местоположения файла info.json). Перейти во вкладку Database внизу панели файловой навигации. В главном меню приложения выбрать View->View Semantic Output. Нажать на кнопку Rectangle. В этом режиме будет доступна не только сама разметка, но и название класса для каждого размеченного объекта.
7.	Визуально сравнить результат с отображаемым в FiftyOne.
8.	Скачайте базу данных в формате YOLOv8. Иструкции находятся по адресу https://docs.roboflow.com/roboflow-cli/download-dataset 
9.	Скрипт для конвертации исходной аннотации в аннотацию разработанной библиотеки находится в каталоге https://github.com/olgashemagina/BAISim/tools/converters/YOLO2AWP_Converter.py. Перед запуском необходимо отредактировать значение переменной path в скрипте в соответствии с реальным нахождением коллекции. Путь должен быть указан до каталога, в котором находится файл data.yaml
10.	Выполните скрипт 
python YOLO2AWP_Converter.py
11.	В результате выполнения в каталоге valid/images (путь указан относительно местоположения файла data.yaml) для каждого файла в формате jpeg появится файл разметки в формате xml, а также файл dictionary.xml, содержащий информацию о классах.
12.	В приложении Image Marker перейти в каталог validation/data (путь указан относительно местоположения файла info.json). Перейти во вкладку Database внизу панели файловой навигации. В главном меню приложения выбрать View->View Semantic Output. Нажать на кнопку Rectangle. В этом режиме будет доступна не только сама разметка, но и название класса для каждого размеченного объекта.
13.	Визуально сравнить результат с отображаемым в RoboFlow.
